#include<iostream>
#include<queue>
using namespace std;

int main()
{
    int N, M;
    cin >> N >> M;
    int maze[100][100] = { 0 };

    char digit;
    for (int i = 0; i < N; ++i) 
        for (int j = 0; j < M; ++j)
        {
            cin >> digit;
            maze[i][j] = digit - '0';
        }


    int dy[4] = { 0,0,1,-1 };
    int dx[4] = { 1,-1,0,0 };
    int minTime = 0;
    queue<pair<int, int>> q;
    q.push({ 0, 0 });

    bool loopExit = false;
    while (!q.empty() && !loopExit)
    {
       int q_size = q.size();
      
        for (int idx = 0; idx < q_size; ++idx)
        {
            int currentX = q.front().second;
            int currentY = q.front().first;
            q.pop();

        
            if (currentX == M - 1 && currentY == N - 1)
            {
                loopExit = true;    break;
            }
            maze[currentY][currentX] = 0;
         
            for (int i = 0; i < 4; ++i)
            {
               int serchY = currentY + dy[i];
               int serchX = currentX + dx[i];

                if (serchX < 0 || serchY < 0 || serchX >= M || serchY >= N || maze[serchY][serchX] == 0)
                    continue;
                q.push({ serchY, serchX });
               
            }
        }
        ++minTime;
    }

    cout << minTime;




    return 0;
}
