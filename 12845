#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int maxGold(vector<int>& levels) {
    int n = levels.size();
    vector<vector<int>> dp(n, vector<int>(n, 0));
    vector<vector<int>> sum(n, vector<int>(n, 0));

    for (int i = 0; i < n; ++i) {
        sum[i][i] = levels[i];
    }

    for (int len = 2; len <= n; ++len) {
        for (int i = 0; i <= n - len; ++i) {
            int j = i + len - 1;
            sum[i][j] = sum[i][j - 1] + levels[j];
            for (int k = i; k < j; ++k) {
                int gold = sum[i][j];
                dp[i][j] = max(dp[i][j], dp[i][k] + dp[k + 1][j] + gold);
            }
        }
    }

    return dp[0][n - 1];
}

int main() {
    vector<int> levels = {40, 30, 30};
    cout << "최대 골드: " << maxGold(levels) << endl;
    return 0;
}
